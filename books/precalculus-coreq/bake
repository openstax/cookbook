#!/usr/bin/env ruby

# frozen_string_literal: true

require 'bundler/inline'

gemfile do
  gem 'openstax_kitchen', ENV['USE_LOCAL_KITCHEN'] ? { path: '/code/kitchen' } : '9.2.0'
  gem 'slop', '4.8.2'
  gem 'byebug'
end

require_relative '../precalculus/precalculus_recipe'

coreq = Kitchen::BookRecipe.new(book_short_name: :precalculus_coreq) do |doc|
  include Kitchen::Directions

  book = doc.book

  book.chapters.pages.search('section.practice-perfect').exercises.each do |exercise|
    exercise.remove_class('material-set-2')
    exercise.add_class('os-coreq-exercises')
    BakeNumberedExercise.v1(exercise: exercise, number: exercise.count_in(:page))
    BakeFirstElements.v1(within: exercise)
    exercise.search('table').each do |table|
      table.add_class('os-coreq-element')
    end
  end

  book.search('section.coreq-skills').each do |coreq_section|
    coreq_section.prepend(child:
      <<~HTML
        <h3 class="os-title">
          <span class="os-title-label">#{I18n.t(:'coreq-skills')}</span>
        </h3>
      HTML
    )
    coreq_section.search('table, figure, div[data-type="example"]').each do |table|
      table.add_class('os-coreq-element')
    end
  end
end

opts = Slop.parse do |slop|
  slop.string '--input', 'Assembled XHTML input file', required: true
  slop.string '--output', 'Baked XHTML output file', required: true
end

puts Kitchen::Oven.bake(
  input_file: opts[:input],
  recipes: [PRECALCULUS_RECIPE, coreq],
  output_file: opts[:output]
)
