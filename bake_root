#!/usr/bin/env bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

usage="bake -b <bookname> -r <legacy_recipes_dir> -i <inputfile> -o <outputfile>"

# Get command line arguments

while getopts b:i:o:r:h flag
do
  case "${flag}" in
    b) book=${OPTARG} ;;
    i) input_file=${OPTARG} ;;
    o) output_file=${OPTARG} ;;
    r) legacy_recipes_dir=${OPTARG} ;;
    h) echo "$usage"; exit 0 ;;
    *) echo "Unknown flag '${flag}'"; exit 1 ;;
  esac
done

# Known supported books will use the kitchen baking, all others will fallback
# to legacy.

# NOTE: The dummy recipe is a temporary placeholder until there's a recipe that
#       is ready for release. At that point, the case statement can be updated
#       accordingly and the dummy recipe removed altogether both here and in
#       the underlying bake script.

case "${book}" in
  chemistry)
    echo "Baking book '${book}' with kitchen" ;
    "${DIR}/bake" -b "$book" -i "$input_file" -o "$output_file";;
  dummy)
    echo "Baking book '${book}' with kitchen" ;
    "${DIR}/bake" -b "$book" -i "$input_file" -o "$output_file";;
  u-physics)
    echo "Baking book '${book}' with kitchen" ;
    "${DIR}/bake" -b "$book" -i "$input_file" -o "$output_file";;
  *) echo "Baking book '${book}' with legacy baking";
    "${DIR}/bake_legacy" -i "$input_file" -o "$output_file" -r "${legacy_recipes_dir}/${book}.css";;
esac
