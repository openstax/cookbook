# frozen_string_literal: true

RSpec.describe Kitchen::Directions::BakeInjectedExercise do
  before do
    stub_locales({
      'context_lead_text': 'Refer to '
    })
  end

  let(:injected_exercise_full) do
    book_containing(html:
      one_chapter_with_one_page_containing(
        <<~HTML
          <div data-type="injected-exercise" data-injected-from-nickname="contmath91" data-injected-from-version="2" data-injected-from-url="url" data-tags="type:practice all" data-is-vocab="False">
            <div data-type="exercise-stimulus">Stimulus text for exercise.</div>
            <div data-type="exercise-context" data-context-module="abc" data-context-feature="def">
              <a class="autogenerated-content" href="#abcdef-test">[link]</a>
            </div>
            <div data-type="exercise-question" data-is-answer-order-important="False" data-formats="free-response">
              placeholder
            </div>
          </div>
        HTML
      )
    ).injected_exercises.first
  end

  let(:injected_exercise_none) do
    book_containing(html:
      one_chapter_with_one_page_containing(
        <<~HTML
          <div data-type="injected-exercise" data-injected-from-nickname="contmath91" data-injected-from-version="2" data-injected-from-url="url" data-tags="type:practice all" data-is-vocab="False">
            <div data-type="exercise-question" data-is-answer-order-important="False" data-formats="free-response">
              placeholder
            </div>
          </div>
        HTML
      )
    ).injected_exercises.first
  end

  let(:injected_exercise_full_with_two_questions) do
    book_containing(html:
      one_chapter_with_one_page_containing(
        <<~HTML
          <div data-type="injected-exercise" data-injected-from-nickname="contmath91" data-injected-from-version="2" data-injected-from-url="url" data-tags="type:practice all" data-is-vocab="False">
            <div data-type="exercise-stimulus">Stimulus text for exercise.</div>
            <div data-type="exercise-context" data-context-module="abc" data-context-feature="def">
              <a class="autogenerated-content" href="#abcdef-test">[link]</a>
            </div>
            <div data-type="exercise-question" data-is-answer-order-important="False" data-formats="free-response">
              placeholder
            </div>
            <div data-type="exercise-question" data-is-answer-order-important="False" data-formats="free-response">
              another placeholder
            </div>
          </div>
        HTML
      )
    ).injected_exercises.first
  end

  it 'bakes an exercise with a full set of first-level features' do
    described_class.v1(exercise: injected_exercise_full)
    expect(injected_exercise_full).to match_normalized_html(
      <<~HTML
        <div data-type="injected-exercise" data-injected-from-nickname="contmath91" data-injected-from-version="2" data-injected-from-url="url" data-tags="type:practice all" data-is-vocab="False">
          <div data-type="exercise-stimulus">Stimulus text for exercise.</div>
          <div data-type="exercise-question" data-is-answer-order-important="False" data-formats="free-response">
            <div data-type="exercise-context" data-context-module="abc" data-context-feature="def">Refer to <a class="autogenerated-content" href="#abcdef-test">[link]</a></div>
            placeholder
          </div>
        </div>
      HTML
    )
  end

  it 'bakes an exercise without any first-level features' do
    described_class.v1(exercise: injected_exercise_none)
    expect(injected_exercise_none).to match_normalized_html(
      <<~HTML
        <div data-type="injected-exercise" data-injected-from-nickname="contmath91" data-injected-from-version="2" data-injected-from-url="url" data-tags="type:practice all" data-is-vocab="False">
          <div data-type="exercise-question" data-is-answer-order-important="False" data-formats="free-response">
            placeholder
          </div>
        </div>
      HTML
    )
  end

  it 'bakes an exercise with a full set of first-level features and not moves context-exercise' do
    described_class.v1(exercise: injected_exercise_full_with_two_questions)
    expect(injected_exercise_full_with_two_questions).to match_normalized_html(
      <<~HTML
        <div data-type="injected-exercise" data-injected-from-nickname="contmath91" data-injected-from-version="2" data-injected-from-url="url" data-tags="type:practice all" data-is-vocab="False">
          <div data-type="exercise-stimulus">Stimulus text for exercise.</div>
          <div data-type="exercise-context" data-context-module="abc" data-context-feature="def">Refer to <a class="autogenerated-content" href="#abcdef-test">[link]</a></div>
          <div data-type="exercise-question" data-is-answer-order-important="False" data-formats="free-response">
            placeholder
          </div>
          <div data-type="exercise-question" data-is-answer-order-important="False" data-formats="free-response">
            another placeholder
          </div>
        </div>
      HTML
    )
  end
end
