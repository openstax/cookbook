#!/usr/bin/env bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

usage="shorten -b <bookname> -i <inputfile>"

# Get command line arguments

while getopts b:i:h flag
do
  case "${flag}" in
    b) book=${OPTARG} ;;
    i) input_file=${OPTARG} ;;
    h) echo $usage; exit 0 ;;
    *) echo "Unknown flag '${flag}'"; exit 1 ;;
  esac
done

# List additional books here

case "${book}" in
  american_government) dest="${DIR}/data/american_government/short" && script="${DIR}/books/american_government/shorten";;
  ap-history) dest="${DIR}/data/ap-history/short" && script="${DIR}/books/ap-history/shorten";;
  biology) dest="${DIR}/data/biology/short" && script="${DIR}/books/biology/shorten";;
  calculus) dest="${DIR}/data/calculus/short" && script="${DIR}/books/calculus/shorten";;
  chemistry) dest="${DIR}/data/chemistry/short" && script="${DIR}/books/chemistry/shorten";;
  statistics) dest="${DIR}/data/statistics/short" && script="${DIR}/books/statistics/shorten";;
  pl-psychology) dest="${DIR}/data/pl-psychology/short" && script="${DIR}/books/pl-psychology/shorten";;
  microbiology) dest="${DIR}/data/microbiology/short" && script="${DIR}/books/microbiology/shorten";;
  precalculus) dest="${DIR}/data/precalculus/short" && script="${DIR}/books/precalculus/shorten";;
  precalculus-coreq) dest="${DIR}/data/college-algebra-coreq/short" && script="${DIR}/books/precalculus-coreq/shorten";;
  sociology) dest="${DIR}/data/sociology/short" && script="${DIR}/books/sociology/shorten";;
  u-physics) dest="${DIR}/data/u-physics/short" && script="${DIR}/books/u-physics/shorten";;
  finance) dest="${DIR}/data/finance/short" && script="${DIR}/books/finance/shorten";;
  english-composition) dest="${DIR}/data/english-composition/short" && script="${DIR}/books/english-composition/shorten";;
  microbiology) dest="${DIR}/data/microbiology/short" && script="${DIR}/books/microbiology/shorten";;
  anatomy) dest="${DIR}/data/anatomy/short" && script="${DIR}/books/anatomy/shorten";;
  bca) dest="${DIR}/data/bca/short" && script="${DIR}/books/bca/shorten";;
  computer-science) dest="${DIR}/data/computer-science/short" && script="${DIR}/books/computer-science/shorten";;
  political-science) dest="${DIR}/data/political-science/short" && script="${DIR}/books/political-science/shorten";;
  ap-biology) dest="${DIR}/data/ap-biology/short" && script="${DIR}/books/ap-biology/shorten";;
  college-physics) dest="${DIR}/data/college-physics/short" && script="${DIR}/books/college-physics/shorten";;
  astronomy) dest="${DIR}/data/astronomy/short" && script="${DIR}/books/astronomy/shorten";;
  history) dest="${DIR}/data/history/short" && script="${DIR}/books/history/shorten";;
  *) echo "Unknown book '${book}'"; exit 1;;
esac

# Call the shorten script

echo "Shortening ..."
if [ ! -d $dest ]
then
    mkdir $dest
fi
$script --input $input_file --output $dest/assembled.xhtml

# Bake shortened book with legacy

if [ -e legacy_recipes/$book.css ]
then
    echo "Baking with legacy ..."
    ./bake_legacy -i $dest/assembled.xhtml -r legacy_recipes/$book.css -o $dest/easybaked.xhtml
    # Normalize the easybaked book
    ruby scripts/normalize $dest/easybaked.xhtml --easybaked-only
else
    echo "Cannot bake with legacy because legacy_recipes/${book}.css does not exist."
fi

# Bake shortened book with kitchen

if [ -e $DIR/books/$book/bake ]
then
  echo "Baking with kitchen ..."
  ./bake -b $book -i $dest/assembled.xhtml -o $dest/kitchen-baked.xhtml
  # Normalize the kitchen baked book
  ruby scripts/normalize $dest/kitchen-baked.xhtml
else
  echo "Cannot bake with kitchen because books/${book}/bake does not exist."
fi
