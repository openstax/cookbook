#!/usr/bin/env bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

usage="bake -b <bookname> -i <inputfile> -o <outputfile> -r <resourcedir>"

# Get command line arguments

while getopts b:i:o:r:h flag
do
  case "${flag}" in
    b) book=${OPTARG} ;;
    i) input_file=${OPTARG} ;;
    o) output_file=${OPTARG} ;;
    r) resource_dir=${OPTARG} ;;
    h) echo $usage; exit 0 ;;
    *) echo "Unknown flag '${flag}'"; exit 1 ;;
  esac
done

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

# Keep a list of valid recipes
# Blow up if a recipe is not on this list

valid_recipes=(
  accounting
  american-government
  anatomy
  anthropology
  ap-biology
  ap-history
  ap-physics
  ap-physics-2e
  astronomy
  bca
  biology
  business-ethics
  calculus
  chemistry
  college-physics
  college-physics-2e
  college-success
  computer-science
  contemporary-math
  dev-math
  dummy
  economics
  english-composition
  entrepreneurship
  finance
  history
  hs-college-success
  hs-physics
  intro-business
  marketing
  microbiology
  nursing-external
  nursing-internal
  organic-chemistry
  otto-book
  philosophy
  pl-economics
  pl-psychology
  pl-u-physics
  political-science
  precalculus
  precalculus-coreq
  principles-management
  psychology
  python
  sociology
  statistics
  u-physics
  web-generic
  world-history
)

if [[ ! " ${valid_recipes[*]} " =~ " ${book} " ]]; then
  echo "Unknown book '${book}'"
  exit 1
fi

# Bake the given book

if [[ -n $resource_dir ]]; then
  case "${book}" in
    otto-book) $DIR/lib/recipes/chemistry/bake --input $input_file --output $output_file --resources $resource_dir;;
    *) $DIR/lib/recipes/$book/bake --input $input_file --output $output_file --resources $resource_dir;;
  esac
else
  case "${book}" in
    otto-book) $DIR/lib/recipes/chemistry/bake --input $input_file --output $output_file;;
    *) $DIR/lib/recipes/$book/bake --input $input_file --output $output_file;;
  esac
fi
