#!/usr/bin/env ruby

# frozen_string_literal: true

require_relative '../recipes_helper'

recipe = Kitchen::BookRecipe.new(book_short_name: :testing_anchor) do |doc|
  include Kitchen::Directions

  book = doc.book
  metadata = book.metadata

  # Some stuff just goes away
  book.search('cnx-pi').trash

  BakePreface.v1(book: book)

  BakeChapterTitle.v1(book: book)
  BakeChapterIntroductions.v2(
    book: book, strategy_options: {
      strategy: :default,
      bake_chapter_outline: false,
      introduction_order: :v1
    }
  )

  book.chapters.each do |chapter|
    BakeNonIntroductionPages.v1(chapter: chapter)
    BakeLearningObjectives.v1(chapter: chapter)
  end

  BakeAutotitledNotes.v1(book: book, classes: %w[bringhome])

  book.pages('$.appendix').each do |page|
    appendix_letter = [*('A'..'Z')][page.count_in(:book) - 1]
    BakeAppendix.v1(page: page, number: appendix_letter)
  end

  BakeFootnotes.v1(book: book)
  BakeLinkPlaceholders.v1(book: book)
  BakeToc.v1(book: book)
  BakeLinks.v1(book: book)
end

opts = Slop.parse do |slop|
  slop.string '--input', 'Assembled XHTML input file', required: true
  slop.string '--output', 'Baked XHTML output file', required: true
end

puts Kitchen::Oven.bake(
  input_file: opts[:input],
  recipes: [recipe],
  output_file: opts[:output]
)
